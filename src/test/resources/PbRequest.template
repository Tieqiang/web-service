$PBExportHeader$${className}.sru
forward
global type ${className} from nonvisualobject
end type
end forward

global type ${className} from nonvisualobject autoinstantiate
end type

type variables
${variables}
end variables

forward prototypes
public function string to_json ()
public subroutine parse_json (string as_json)
end prototypes

public function string to_json ();
sailjson json
json = create sailjson

try
    ${toJson}
    return json.getformatjson("")
catch(runtimeerror e)
	messagebox("错误","生成入参失败！~r~n"+e.text)
end try
end function

public subroutine parse_json (string as_json);
sailjson json
json = create sailjson

try
    json.parse( as_json)
    ${parseJson}
catch(runtimeerror e)
	messagebox("错误","解析入参失败！~r~n"+e.text+"~r~n"+as_json)
end try
end subroutine

on ${className}.create
TriggerEvent( this, "constructor" )
call super::create
end on

on ${className}.destroy
TriggerEvent( this, "destructor" )
call super::destroy
end on